upstream @php-fpm {
	server unix:/run/php/php-fpm.sock;
}

server {
  # Derver listen (HTTP).
  listen 8000 default_server;
  listen [::]:8000 default_server ipv6only=on;

  root /app/public;
  index index.php

  # Configures default logger.
  access_log stdout;
  error_log stderr;

  # Remove noise from access logs when common files don't exist.
  location = /favicon.ico { access_log off; log_not_found off; }
  location = /robots.txt { access_log off; log_not_found off; }

  # location / {
    # Try to serve file directly, fallback to rewrite
    # try_files $uri @rewriteapp;
  # }

  # location @rewriteapp {
    # Rewrite all to index.php
    # rewrite ^(.*)$ /index.php/$1 last;
  # }

 location / {
    # try to serve file directly, fallback to index.php
    try_files $uri /index.php$is_args$args;
  }

  # Pass the PHP scripts to php7-fpm.
  location ~ ^/index.php$ {
    fastcgi_pass @php-fpm;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    include fastcgi_params;

    # optionally set the value of the environment variables used in the application
    # fastcgi_param APP_ENV prod;
    # fastcgi_param APP_SECRET <app-secret-id>;
    # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

    # When you are using symlinks to link the document root to the
    # current version of your application, you should pass the real
    # application path instead of the path to the symlink to PHP
    # FPM.
    # Otherwise, PHP's OPcache may not properly detect changes to
    # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
    # for more information).
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;

    # Prevents URIs that include the front controller. This will 404:
    # http://domain.tld/index.php/some-path
    # Remove the internal directive to allow URIs like this
    internal;
  }

  # return 404 for all other php files not matching the front controller
  # this prevents access to other php files you don't want to be accessible.
  location ~ \.php$ {
    return 404;
  }

	# Restrict access to hidden files, just in case.
	location ~ /\. {
		return 404;
  }
}
